////////////////////////////////////////////////////////////////////////////////////////////////////
// file:	Draupnir/TargetConductor.cpp
//
// summary:	Implements the target conductor class
////////////////////////////////////////////////////////////////////////////////////////////////////

#include <botan/tls_client.h>
#include <botan/tls_policy.h>
#include <botan/tls_session_manager.h>

#include "TargetConductor.h"
#include "Logger.h"

namespace Draupnir
{
	////////////////////////////////////////////////////////////////////////////////////////////////////
	TargetConductor::TargetConductor(std::shared_ptr<Config> config)
		: Conductor(config)
	{
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	void TargetConductor::Run()
	{
		Logger& log = Logger::GetInstance();
		log.Info() << "Draupnir is started in target mode";

		CreateTerminal();
		ExecShell();
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	void TargetConductor::CreateTerminal()
	{
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////
	void TargetConductor::ExecShell()
	{
	}
} // namespace Draupnir
